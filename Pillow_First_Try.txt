# 1: Правене на флаг 
from PIL import Image

def flag(c,w=100,h=100):
	c1,c2,c3 = c.split()
	img = Image.new("RGB", (w*3,h), c1)
	lay1 = Image.new("RGB", (w,h), c2)
	lay2 = Image.new("RGB", (w,h), c3)
	img.paste(lay1,(w,0))
	img.paste(lay2,(w*2,0))
	img.show()

flag("gold blue pink",200,350) 

# 2: Правене на JPEG thumbnail 
from __future__ import print_function
import os, sys
from PIL import Image

size = (128, 128)

for infile in sys.argv[1:]:
    outfile = os.path.splitext(infile)[0] + ".thumbnail"
    if infile != outfile:
        try:
            im = Image.open(infile)
            im.thumbnail(size)
            im.save(outfile, "JPEG")
        except IOError: # Ако файлът не може да се отвори се появява този вид грешка
            print("cannot create thumbnail for", infile)

# 3: Завъртане на геометрични фигури: Има два начина: Чрез rotate() и чрез transpose() 
out = im.rotate(45) # Числото в скобите показва на колко градуса се завърта 
out = im.transpose(Image.ROTATE_180) # Завърта снимката на обратно. Мисля, че transpose е по-подходящо за снимки. Има и 
# други начини за записване: out = im.transpose(Image.FLIP_LEFT_RIGHT)


# 4: Добавяне на видове филтри 
from PIL import ImageFilter
out = im.filter(ImageFilter.DETAIL) # Дава по-голяма детайлноост 
out = im.filter(ImageFilter.BLUR) # Замазва снимката 

# 5: Четене на последователности (sequences) или още наречени анимационни формати 
from PIL import Image

im = Image.open("animation.gif")
im.seek(1) # Прескача до вторият кадър

try:
    while 1:
        im.seek(im.tell()+1)
        # Промени нещо по im 
except EOFError:
    pass # Край 

# 6: С помощта на Pillow е възможно да се принтят снимки и текст на Лазерни принтери 

# 7: Преобразуване на 3d масив в снимка 
from PIL import Image
import numpy as np

w, h = 512, 512
data = np.zeros((h, w, 3), dtype=np.uint8)
data[0:256, 0:256] = [255, 0, 0] # red patch in upper left
img = Image.fromarray(data, 'RGB')
img.save('my.png')
img.show()

# 8: Допълнителна информация за библиотеката: 
Pillow идва от PIL (Python Imagining Library) или е по-точно нещо като по-модерна негова версия (така мислят някои хора)